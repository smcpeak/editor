

3/28/01 03:31

got the font stuff working after looking in many places.

to find out the name of the current font:

  myFontStruct = XQueryFont(display, XGContextFromGC(gc));
  XGetFontProperty(fs, XA_FONT, &nameAtom);
  char *name = XGetAtomName(display, nameAtom);
  printf("font name: %s\n", name);
  
to set it to use a new font:

  myFontId = XLoadFont(display, myFontName);
  XSetFont(display, gc, myFontId);

so current list of todos:

  - get the cursor update working right
    - draw the cursor by first snapshotting the image underneath
      where I want to draw (must calculate a bounding box), then
      draw whatever I want, then replace the image when I want
      to move it or flash it or whatever
  - make the cursor bigger, proper height by font, etc.
  - ability to load and save files
  - different colors than black/white
  - more keybindings ....
  - systematic way of naming keys (the emacs way is close)
  - scrolling
  - a keyboard-activated menu
  - some way of prompting for interactive input -- a dialog box
    - need to make a new window, which prevents interaction
      with the underlying window
    - that dialog needs some buttons
    - and a text widget, ideally with configurable key bindings
    - and some dialog-wide keyboard navigation
  - ability to select text
  - copy+paste       
  - redraw button, and/or proper redrawing generally
    - still need window coords

fixed newline problem

some malloc mischief?  hard to reproduce...

end 3/28/01 04:26

---------------------------------------------
start 3/29/01 03:59

let's try to make some simple dialog boxes with Motif

so far I've been unable to make it drop into a modal
loop, which is really required for proper composability..

end 3/29/01 05:32

--------------------------------------
start 3/31/01 22:39

more attempts to make a file-load dialog box

found that I can make a modal event model by building
my own event loop.  however:
  - that does nothing for the app input, which I need to
    separately disable
  - I must not create the dialog inside the menu's callback
    function because it has the mouse input captured (!)
    until the callback returns
  - not obvious when to end event loop, because not all window
    destruction paths go through my callbacks
    
this seems to argue for constructing my own callback structure..

solved the when-to-end problem by making the loop guard:

  XtIsManaged(dialog) || XtAppPending(app)
  
this makes sure we quit as soon as the dialog disappears, and
the event queue is quiescent

actually, since the sample code just says it wants to make sure
the widget is "destroyed", I think the XtIsManaged should be
sufficient..

------------------------
start 4/09/01 11:26

more dialog stuff ...

-------------------
start 7/18/02 10:15

resuming work after a long time..

renaming Cursor to Position.. done

end 7/18/02 13:45

---------------
start 7/18/02 17:36

what I need from a widget set / toolkit:
  - menus
  - scroll bars that I can put at the sides of my content windows
  - file chooser dialog
  - ability to make simple custom dialogs; needed controls:
    - static label
    - text input (with optional dropdown history)
    - list box with at least single selection
    - checkbox, radio button
    - push buttons

-------------------
start 2/08/03 02:17

looking at this again.  I've found my widget set: Qt.  so the
short-term project now is to embed what I have inside a Qt
framework instead of an X11 framework

also made a tentative decision to use Guile for my scripting
engine when the time comes

---------------
start 2/09/03 00:07

continuing to get what I had to work under Qt

ok, everything that was working now does again

fixed some issues with deletion

next task: embed the editor widget into a more fully-functional
GUI environment (load named file, save named file, scrolling) so
I can experiment with more realistic files and file sizes

end 2/09/03 02:44

---------------
start 2/09/03 14:52

todo:
  - load file
  - save file
  - scrolling
  
did load and save, but I've got a bug in my Buffer implementation
that's causing me to trash memory.. will switch on the debug heap
to find it next time

end 2/09/03 17:15

--------------
start 2/10/03 17:58

fixed the bug last night.. now can I save and load?  yes

let's now get the text-rendering procedure working a bit better,
and in the process implement scrolling


