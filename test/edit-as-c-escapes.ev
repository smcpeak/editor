// edit-as-c-escapes.ev
// Test "Edit | Edit as C string escapes..."

{
  args: []
  includes: ["common-defns.gdvn"]
  cmds: [

    // Path to the line edit inside the dialog we are testing.
    Define(dialogLineEdit "window1.frame1.editorFrame.m_editorWidget.#2.#1")

    // Procedure to use "Edit as C string escapes" to enter text in C
    // string syntax.
    Define(runEditAsCStringDialog(oldText, newText) [
      // Open the dialog.
      Shortcut("window1.m_menuBar" "Alt+E")
      KeyPress("window1.m_menuBar.editMenu" "Key_E" "e")
      CheckFocusWidget(dialogLineEdit)

      // Check the old text.
      CheckLineEditText(dialogLineEdit oldText)

      // Enter the new text.
      FocusKeySequence(newText)
      FocusKeyPR("Key_Return" "\r")

      // Back in editor.
      CheckFocusWidget(editorWidget)
    ])

    // In editor.
    CheckFocusWidget(editorWidget)

    // Enter a first line of text.
    runEditAsCStringDialog("" "hello\\n")
    checkDocumentText("hello\n")

    // Add another line.
    runEditAsCStringDialog("" "another\\x20word")
    checkDocumentText("hello\nanother word")

    // Add a newline.
    FocusKeyPR("Key_Return" "\r")

    // Select the second line.
    FocusKeyPR("Shift+Key_Up" "")

    // Edit it.
    runEditAsCStringDialog("another word\\n" "\\x00\\x01\\x02\\x03")
    checkDocumentText("hello\n\u{0}\u{1}\u{2}\u{3}")

    // Select the line again.
    FocusKeyPR("Shift+Key_Home" "")

    // Edit it again.
    runEditAsCStringDialog("\\000\\001\\002\\003" "123\\n")
    checkDocumentText("hello\n123\n")

  ]
}


// EOF
